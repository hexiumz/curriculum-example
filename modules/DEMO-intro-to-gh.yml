title: Introduction to GitHub
pre-requisites: 
learning-objective: Learn about GitHub and The GitHub Workflow
screens:
  - image-slide:
      title: Using GitHub
      introduction: |
        ## What is GitHub?

        GitHub is a place to collaborate on projects online. It's built specificially with software projects in mind, but will work for any project where most of what you're collaborating on are plain text files.

        Underneath GitHub is a piece of software called Git. Git is a Distributed Version Control System (DVCS) that lets you track changes in your files and revert to older versions of your project if you ever need to. Git also makes it easy for multiple people to work on the same project at the same time without losing work.

        GitHub extends Git's collaboration functionality by adding certain productivity and communication tools. 

        * Issues can be used to track bugs or discuss new features.
        * Pull Requests let you discuss sets of changes before incorporating them into the main project. 
        * The Pulse and Graphs let you see how the project is progressing and who has been working on what. 

        On the next few pages, you'll learn more about how to use these features yourself.


        ## The GitHub Workflow

        The GitHub Workflow is as much about creating a culture of collaboration as it is about using technology. Creating a collaborative culture is very important, because that's the human side of how work will actually get done.

        ![The GitHub Workflow](https://raw.githubusercontent.com/wheelhouseio/curriculum-github/master/images/github-flow.png)

        The GitHub Workflow is pretty simple.    
        
        1. When making changes or adding a new feature to the project, this work should be done off to the side on a **branch**, not in the main code base. 
        2. Once you have made a few of the changes, you will submit a **Pull Request** to show others what you would like to add to the `master` branch. 
        3. Your teammates will review your work and give you feedback, which you will take action on.
        4. Once the work is completed, you will merge the changes into the master branch.

        <div class='container' data-video-url='https://youtu.be/PBI2Rz-ZOxU'></div>

        In the next few pages, we'll learn more about each step in this process and practice them directly on GitHub. Scroll to the top and click on the "next" button to continue.
additional-labs:
additional-questions:
resources:
