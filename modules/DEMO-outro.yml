title: Outro
pre-requisites: 
learning-objective: Wrap-up
screens:
  - lab:
      title: Congratulations!
      id: DEMO-outro
      presenter-script:
      introduction: |
        ## You did it!

        Congratulations - you completed the entire GitHub Workflow! You are on your way to becoming a collaborator and learning all of the features GitHub has to offer.

        ## Next Steps

        To continue your learning on Wheelhouse, you can purchase our GitHub for Developers course.

        If you'd like to review the steps you just completed, we recommend looking at GitHub's <a href="https://guides.github.com/introduction/flow/" target="_blank">guide on the GitHub Workflow</a>. 

        Below is a brief review of what we learned. There is also an optional project below where you can practice your new collaboration skills.

        ## Branches

        Branching is an essential part of the way that we work on GitHub. Rather than having everyone make changes to the production version of the code, we create branches for each piece of work, commit changes there, and then merge them into the main branch once they're done.

        Branches should have descriptive names so that you know what work is getting done on which branch. By convention, the main branch is usually called `master`. When you see people talking about master, they're just talking about a specific branch. 


        ## Commits

        A commit is a snapshot of your repository at a point in time. 

        When saving a commit, you must include a commit message. This is a description of the work you did so others can more easily understand what has changed.


        ## Pull Requests

        A Pull Request is how you communicate about the changes you would like to make to the production code. Once you've made some commits on a branch, you will create a Pull Request (or PR as most people call it) to compare it to the master branch. 

        Pull Requests allow comments just like Issues do. You can also associate a PR with a specific Issue to make it easy to jump back and forth between the two. Often a PR is created in response to a specific Issue. 

        Pull Requests also allow you to look at all the commits that are a part of that PR, and to make comments on the lines of code that were changed. This is a great way to offer specific feedback on the new code, or to ask questions about the implementation. 

        Finally, you can continue to make commits to the branch that is associated with the PR until it has been merged. Most teams will open PRs very early in the development process, so that they can communicate with each other while they work on the bug or feature.

      steps:    
        - description: "Create a branch for your changes."
          id: DEMO-outro-create-branch
          verifications:
            - verification-type: branch-created
              id: DEMO-outro-create-branch-verification
              success-message: "Great job - you created a branch."
              failure-message: "It looks like you haven't created a branch yet."
        - description: "Create a new file on your branch and commit your changes."
          id: DEMO-outro-create-file
          verifications:
            - verification-type: file-created
              id: DEMO-outro-create-file-verification
              success-message: "Great job - you committed the change."
              failure-message: "It looks like you haven't committed a change yet."
        - description: "Create a PR to merge your branch into `master`."    
          id: DEMO-outro-create-pr
          verifications:
            - verification-type: pull-request
              id: DEMO-outro-create-pr-verification
              success-message: "Great job - you created the PR."
              failure-message: "It looks like you haven't created a PR yet."
        - description: "Comment on the PR."
          id: DEMO-outro-pr-comment
          verifications:
            - verification-type: issue-comment-created
              id: DEMO-outro-pr-comment-verification
              success-message: "Great job - you commented on the PR."
              failure-message: "It looks like you haven't commented on the PR yet."
        - description: "Merge the Pull Request."
          id: DEMO-outro-merge-pr
          verifications:
            - verification-type: pull-request-merged
              id: DEMO-outro-merge-pr-verification
              success-message: "Great job - you merged the PR."
              failure-message: "It looks like you haven't merged the PR yet."
        - description: "Delete the branch."
          id: DEMO-outro-delete-branch
          verifications:
            - verification-type: branch-deleted
              id: DEMO-outro-delete-branch-verification
              success-message: "Great job - you deleted the branch."
              failure-message: "It looks like you haven't deleted the branch yet."
additional-labs:
additional-questions:
resources:
